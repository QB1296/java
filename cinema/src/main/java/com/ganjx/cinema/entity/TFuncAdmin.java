package com.ganjx.cinema.entity;

// Generated 2015-3-4 9:42:26 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.codehaus.jackson.annotate.JsonIgnore;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

import com.vion.core.domain.entity.IEntity;

/**
 * TFuncAdmin generated by hbm2java
 */
@Entity
@Table(name = "t_func_admin")
@Cache(usage=CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class TFuncAdmin implements IEntity,Comparable<TFuncAdmin> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int id;
	private Integer lfuncRootid;
	private Integer lfuncParentid;
	private String sfuncName;
	private String sfuncUrl;
	private String siconUrl;
	private String sfuncDesc;
	private Byte lfuncadminType;
	private Date ddate;
	private Byte lisleaf;
	private Byte lstatus;
	private Integer lorder;

	private TFuncAdmin parent;
	private List<TFuncAdmin> children;
	
	public TFuncAdmin() {
	}

	public TFuncAdmin(int id) {
		this.id = id;
	}

	public TFuncAdmin(int id, Integer lfuncRootid, Integer lfuncParentid,
			String sfuncName, String sfuncUrl, String siconUrl,
			String sfuncDesc, Byte lfuncadminType, Date ddate, Byte lisleaf,
			Byte lstatus, Integer lorder) {
		this.id = id;
		this.lfuncRootid = lfuncRootid;
		this.lfuncParentid = lfuncParentid;
		this.sfuncName = sfuncName;
		this.sfuncUrl = sfuncUrl;
		this.siconUrl = siconUrl;
		this.sfuncDesc = sfuncDesc;
		this.lfuncadminType = lfuncadminType;
		this.ddate = ddate;
		this.lisleaf = lisleaf;
		this.lstatus = lstatus;
		this.lorder = lorder;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "lfunc_rootid", precision = 9, scale = 0)
	public Integer getLfuncRootid() {
		return this.lfuncRootid;
	}

	public void setLfuncRootid(Integer lfuncRootid) {
		this.lfuncRootid = lfuncRootid;
	}

	@Column(name = "lfunc_parentid", precision = 9, scale = 0)
	public Integer getLfuncParentid() {
		return this.lfuncParentid;
	}

	public void setLfuncParentid(Integer lfuncParentid) {
		this.lfuncParentid = lfuncParentid;
	}

	@Column(name = "sfunc_name", length = 30)
	public String getSfuncName() {
		return this.sfuncName;
	}

	public void setSfuncName(String sfuncName) {
		this.sfuncName = sfuncName;
	}

	@Column(name = "sfunc_url")
	public String getSfuncUrl() {
		return this.sfuncUrl;
	}

	public void setSfuncUrl(String sfuncUrl) {
		this.sfuncUrl = sfuncUrl;
	}

	@Column(name = "sicon_url")
	public String getSiconUrl() {
		return this.siconUrl;
	}

	public void setSiconUrl(String siconUrl) {
		this.siconUrl = siconUrl;
	}

	@Column(name = "sfunc_desc")
	public String getSfuncDesc() {
		return this.sfuncDesc;
	}

	public void setSfuncDesc(String sfuncDesc) {
		this.sfuncDesc = sfuncDesc;
	}

	@Column(name = "lfuncadmin_type", precision = 2, scale = 0)
	public Byte getLfuncadminType() {
		return this.lfuncadminType;
	}

	public void setLfuncadminType(Byte lfuncadminType) {
		this.lfuncadminType = lfuncadminType;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ddate", length = 29)
	public Date getDdate() {
		return this.ddate;
	}

	public void setDdate(Date ddate) {
		this.ddate = ddate;
	}

	@Column(name = "lisleaf", precision = 2, scale = 0)
	public Byte getLisleaf() {
		return this.lisleaf;
	}

	public void setLisleaf(Byte lisleaf) {
		this.lisleaf = lisleaf;
	}

	@Column(name = "lstatus", precision = 2, scale = 0)
	public Byte getLstatus() {
		return this.lstatus;
	}

	public void setLstatus(Byte lstatus) {
		this.lstatus = lstatus;
	}

	@Column(name = "lorder", precision = 9, scale = 0)
	public Integer getLorder() {
		return this.lorder;
	}

	public void setLorder(Integer lorder) {
		this.lorder = lorder;
	}

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="lfunc_parentid",insertable=false,updatable=false)
	@JsonIgnore
	public TFuncAdmin getParent() {
		return parent;
	}

	public void setParent(TFuncAdmin parent) {
		this.parent = parent;
	}

	@OneToMany(fetch=FetchType.LAZY)
	@JoinColumn(name="lfunc_parentid",referencedColumnName="id",insertable=false,updatable=false)
	@JsonIgnore
	public List<TFuncAdmin> getChildren() {
		return children;
	}

	public void setChildren(List<TFuncAdmin> children) {
		this.children = children;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((ddate == null) ? 0 : ddate.hashCode());
		result = prime * result + id;
		result = prime * result
				+ ((lfuncParentid == null) ? 0 : lfuncParentid.hashCode());
		result = prime * result
				+ ((lfuncRootid == null) ? 0 : lfuncRootid.hashCode());
		result = prime * result
				+ ((lfuncadminType == null) ? 0 : lfuncadminType.hashCode());
		result = prime * result + ((lisleaf == null) ? 0 : lisleaf.hashCode());
		result = prime * result + ((lorder == null) ? 0 : lorder.hashCode());
		result = prime * result + ((lstatus == null) ? 0 : lstatus.hashCode());
		result = prime * result
				+ ((sfuncDesc == null) ? 0 : sfuncDesc.hashCode());
		result = prime * result
				+ ((sfuncName == null) ? 0 : sfuncName.hashCode());
		result = prime * result
				+ ((sfuncUrl == null) ? 0 : sfuncUrl.hashCode());
		result = prime * result
				+ ((siconUrl == null) ? 0 : siconUrl.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TFuncAdmin other = (TFuncAdmin) obj;
		if (ddate == null) {
			if (other.ddate != null)
				return false;
		} else if (!ddate.equals(other.ddate))
			return false;
		if (id != other.id)
			return false;
		if (lfuncParentid == null) {
			if (other.lfuncParentid != null)
				return false;
		} else if (!lfuncParentid.equals(other.lfuncParentid))
			return false;
		if (lfuncRootid == null) {
			if (other.lfuncRootid != null)
				return false;
		} else if (!lfuncRootid.equals(other.lfuncRootid))
			return false;
		if (lfuncadminType == null) {
			if (other.lfuncadminType != null)
				return false;
		} else if (!lfuncadminType.equals(other.lfuncadminType))
			return false;
		if (lisleaf == null) {
			if (other.lisleaf != null)
				return false;
		} else if (!lisleaf.equals(other.lisleaf))
			return false;
		if (lorder == null) {
			if (other.lorder != null)
				return false;
		} else if (!lorder.equals(other.lorder))
			return false;
		if (lstatus == null) {
			if (other.lstatus != null)
				return false;
		} else if (!lstatus.equals(other.lstatus))
			return false;
		if (sfuncDesc == null) {
			if (other.sfuncDesc != null)
				return false;
		} else if (!sfuncDesc.equals(other.sfuncDesc))
			return false;
		if (sfuncName == null) {
			if (other.sfuncName != null)
				return false;
		} else if (!sfuncName.equals(other.sfuncName))
			return false;
		if (sfuncUrl == null) {
			if (other.sfuncUrl != null)
				return false;
		} else if (!sfuncUrl.equals(other.sfuncUrl))
			return false;
		if (siconUrl == null) {
			if (other.siconUrl != null)
				return false;
		} else if (!siconUrl.equals(other.siconUrl))
			return false;
		return true;
	}

	@Override
	public int compareTo(TFuncAdmin o) {
		// TODO Auto-generated method stub
		if(this.getLorder() == null || o.getLorder() == null){
			return 0;
		}
		return this.getLorder().compareTo(o.getLorder());
	}

	
}
